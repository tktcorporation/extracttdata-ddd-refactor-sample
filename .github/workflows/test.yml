name: Test

on: pull_request

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./app/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache npm
        uses: actions/cache@v2
        id: cache-npm
        env:
          cache-name: cache-npm
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: cache check
        run: |
          echo "node-modules -->${{steps.cache-node-modules.outputs.cache-hit}}<--"
          echo "npm -->${{steps.cache-npm.outputs.cache-hit}}<--"

      - name: Build containers
        run: docker-compose build

      - name: Up a db container
        run: docker-compose up -d

      - name: Install
        run: docker-compose run --rm app /bin/bash -c "yarn"

      - name: Test
        run: docker-compose run --rm app /bin/bash -c "yarn test"
